}
} else {
logs <- mbb_logs
games <- mbb_games
if (uaa) {
subtitle <- paste("UAA Men's Basketball | Through", date)
} else {
subtitle <- paste("UAA Men's Basketball | Through", date, "| All Games")
}
}
if (uaa) {
conference <- "UAA Total"
} else {
conference <- "Total"
}
logs_conf <-
logs %>%
filter(Opponent == conference)
games_conf <-
games %>%
filter(Game == conference) %>%
mutate(Team = "Chicago")
conference <-
rbind(select(logs_conf, Team, `PPP`, `OPP PPP`, `ORB%`, `DRB%`, `TO%`, `OPP TO%`),
select(games_conf, Team, `PPP`, `OPP PPP`, `ORB%`, `DRB%`, `TO%`, `OPP TO%`)) %>%
merge(logos,
by="Team")
ppp <-
conference %>%
ggplot(aes(x=`PPP`,
y=`OPP PPP`)) +
geom_hline(yintercept=mean(conference$`OPP PPP`), linetype="dashed") +
geom_vline(xintercept=mean(conference$`PPP`), linetype="dashed") +
geom_image(aes(image=URL),
size=0.1,
stat='identity') +
labs(title="Who runs the most efficient offense/defense?",
subtitle=subtitle,
x="Points Per Possession (PPP)",
y="Opponent Points Per Possession (OPP PPP)",
caption=paste("(", toString(n), " total games)", sep="")) +
theme_linedraw() +
theme(
plot.margin = margin(1, 0.5, 0.5, 0.5, "cm"),
plot.background = element_rect(fill = "grey90",
color = "black"),
legend.box.background = element_rect(size=0.75),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
plot.title = element_text(size=18,
face="bold"),
plot.subtitle = element_text(size=14),
plot.caption = element_text(size=10))
rebounds <-
conference %>%
ggplot(aes(x=`DRB%`,
y=`ORB%`)) +
geom_hline(yintercept=mean(conference$`ORB%`), linetype="dashed") +
geom_vline(xintercept=mean(conference$`DRB%`), linetype="dashed") +
geom_image(aes(image=URL),
size=0.1,
stat='identity') +
labs(title="Who are the best and worst rebounding teams?",
subtitle=subtitle,
x="Defensive Rebound Rate (DRB%)",
y="Offensive Rebound Rate (ORB%)",
caption=paste("(", toString(n), " total games)", sep="")) +
theme_linedraw() +
theme(
plot.margin = margin(1, 0.5, 0.5, 0.5, "cm"),
plot.background = element_rect(fill = "grey90",
color = "black"),
legend.box.background = element_rect(size=0.75),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
plot.title = element_text(size=18,
face="bold"),
plot.subtitle = element_text(size=14),
plot.caption = element_text(size=10))
turnovers <-
conference %>%
ggplot(aes(x=`TO%`,
y=`OPP TO%`)) +
geom_hline(yintercept=mean(conference$`TO%`), linetype="dashed") +
geom_vline(xintercept=mean(conference$`OPP TO%`), linetype="dashed") +
geom_image(aes(image=URL),
size=0.1,
stat='identity') +
xlim(floor(min(conference$`TO%`)), ceiling(max(conference$`TO%`))) +
ylim(floor(min(conference$`OPP TO%`)), ceiling(max(conference$`OPP TO%`))) +
labs(title="Which teams commit and force the most turnovers?",
subtitle=subtitle,
x="Team Turnover Rate (TO%)",
y="Opponent Turnover Rate (OPP TO%)",
caption=paste("(", toString(n), " total games)", sep="")) +
theme_linedraw() +
theme(
plot.margin = margin(1, 0.5, 0.5, 0.5, "cm"),
plot.background = element_rect(fill = "grey90",
color = "black"),
legend.box.background = element_rect(size=0.75),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
plot.title = element_text(size=18,
face="bold"),
plot.subtitle = element_text(size=14),
plot.caption = element_text(size=10))
chicago_standings <-
games %>%
slice_tail(n=2+n+1) %>%
slice_head(n=n) %>%
mutate(Team = "Chicago",
Game = row_number(Team),
Wins = cumsum(`W/L` == "W")) %>%
select(Team, Game, Wins) %>%
merge(logos,
by="Team")
standings <-
logs %>%
filter(Opponent != "Rhodes") %>%
group_by(Team) %>%
slice_tail(n=2+n) %>%
slice_head(n=n) %>%
mutate(Game = row_number(Team),
Wins = cumsum(`W/L` == "W")) %>%
ungroup() %>%
select(Team, Game, Wins) %>%
merge(logos,
by="Team") %>%
rbind(chicago_standings) %>%
group_by(Game) %>%
mutate(Ranking = rank(Wins, ties.method='average')) %>%
arrange(Ranking) %>%
ungroup() %>%
arrange(Game)
g_standings <-
standings %>%
ggplot(aes(x=Game, y=Ranking)) +
geom_line(aes(group=Team, color=Team),
size=1.5,
alpha=0.5) +
geom_image(data=filter(standings, Game == n),
aes(image=URL),
size=0.1,
stat='identity') +
scale_color_manual(values=c("navy", "red", "blue", "maroon", "orange", "purple", "yellow", "darkgreen")) +
labs(title="2023 Conference Standings",
subtitle=subtitle,
x="Games Played",
y="Ranking") +
theme_linedraw() +
theme(
plot.margin = margin(1, 0.5, 0.5, 0.5, "cm"),
plot.background = element_rect(fill = "grey90",
color = "black"),
legend.box.background = element_rect(size=0.75),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
plot.title = element_text(size=18,
face="bold"),
plot.subtitle = element_text(size=14),
plot.caption = element_text(size=10))
# ppp
# rebounds
# turnovers
g_standings
View(standings)
library(tidyverse)
library(ggplot2)
library(ggimage)
library(gsheet)
rm(list = ls())
women <- TRUE
date <- "February 12, 2023"
n <- 11
uaa <- TRUE
mbb_logs <- read_csv("https://raw.githubusercontent.com/jeremydumalig/Chicago-Analytics/main/mbb_uaa_scout.csv")
wbb_logs <- read_csv("https://raw.githubusercontent.com/jeremydumalig/Chicago-Analytics/main/wbb_uaa_scout.csv")
mbb_games <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1BcIP7CIYDTNnedcRG3U3HAIwluaJtz8LCAKfArlEh98/edit#gid=136251738")
wbb_games <- gsheet2tbl("https://docs.google.com/spreadsheets/d/12JWqAMfVrSZobLohmxQK6PyrbNbOQbM6ux4LxXqWenM/edit#gid=1703250336")
logos <- read_csv("https://raw.githubusercontent.com/jeremydumalig/Chicago-Analytics/main/uaa_logos.csv")
if (women) {
logs <- wbb_logs
games <- wbb_games
if (uaa) {
subtitle <- paste("UAA Women's Basketball | Through", date)
} else {
subtitle <- paste("UAA Women's Basketball | Through", date, "| All Games")
}
} else {
logs <- mbb_logs
games <- mbb_games
if (uaa) {
subtitle <- paste("UAA Men's Basketball | Through", date)
} else {
subtitle <- paste("UAA Men's Basketball | Through", date, "| All Games")
}
}
if (uaa) {
conference <- "UAA Total"
} else {
conference <- "Total"
}
logs_conf <-
logs %>%
filter(Opponent == conference)
games_conf <-
games %>%
filter(Game == conference) %>%
mutate(Team = "Chicago")
conference <-
rbind(select(logs_conf, Team, `PPP`, `OPP PPP`, `ORB%`, `DRB%`, `TO%`, `OPP TO%`),
select(games_conf, Team, `PPP`, `OPP PPP`, `ORB%`, `DRB%`, `TO%`, `OPP TO%`)) %>%
merge(logos,
by="Team")
ppp <-
conference %>%
ggplot(aes(x=`PPP`,
y=`OPP PPP`)) +
geom_hline(yintercept=mean(conference$`OPP PPP`), linetype="dashed") +
geom_vline(xintercept=mean(conference$`PPP`), linetype="dashed") +
geom_image(aes(image=URL),
size=0.1,
stat='identity') +
labs(title="Who runs the most efficient offense/defense?",
subtitle=subtitle,
x="Points Per Possession (PPP)",
y="Opponent Points Per Possession (OPP PPP)",
caption=paste("(", toString(n), " total games)", sep="")) +
theme_linedraw() +
theme(
plot.margin = margin(1, 0.5, 0.5, 0.5, "cm"),
plot.background = element_rect(fill = "grey90",
color = "black"),
legend.box.background = element_rect(size=0.75),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
plot.title = element_text(size=18,
face="bold"),
plot.subtitle = element_text(size=14),
plot.caption = element_text(size=10))
rebounds <-
conference %>%
ggplot(aes(x=`DRB%`,
y=`ORB%`)) +
geom_hline(yintercept=mean(conference$`ORB%`), linetype="dashed") +
geom_vline(xintercept=mean(conference$`DRB%`), linetype="dashed") +
geom_image(aes(image=URL),
size=0.1,
stat='identity') +
labs(title="Who are the best and worst rebounding teams?",
subtitle=subtitle,
x="Defensive Rebound Rate (DRB%)",
y="Offensive Rebound Rate (ORB%)",
caption=paste("(", toString(n), " total games)", sep="")) +
theme_linedraw() +
theme(
plot.margin = margin(1, 0.5, 0.5, 0.5, "cm"),
plot.background = element_rect(fill = "grey90",
color = "black"),
legend.box.background = element_rect(size=0.75),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
plot.title = element_text(size=18,
face="bold"),
plot.subtitle = element_text(size=14),
plot.caption = element_text(size=10))
turnovers <-
conference %>%
ggplot(aes(x=`TO%`,
y=`OPP TO%`)) +
geom_hline(yintercept=mean(conference$`TO%`), linetype="dashed") +
geom_vline(xintercept=mean(conference$`OPP TO%`), linetype="dashed") +
geom_image(aes(image=URL),
size=0.1,
stat='identity') +
xlim(floor(min(conference$`TO%`)), ceiling(max(conference$`TO%`))) +
ylim(floor(min(conference$`OPP TO%`)), ceiling(max(conference$`OPP TO%`))) +
labs(title="Which teams commit and force the most turnovers?",
subtitle=subtitle,
x="Team Turnover Rate (TO%)",
y="Opponent Turnover Rate (OPP TO%)",
caption=paste("(", toString(n), " total games)", sep="")) +
theme_linedraw() +
theme(
plot.margin = margin(1, 0.5, 0.5, 0.5, "cm"),
plot.background = element_rect(fill = "grey90",
color = "black"),
legend.box.background = element_rect(size=0.75),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
plot.title = element_text(size=18,
face="bold"),
plot.subtitle = element_text(size=14),
plot.caption = element_text(size=10))
chicago_standings <-
games %>%
slice_tail(n=2+n+1) %>%
slice_head(n=n) %>%
mutate(Team = "Chicago",
Game = row_number(Team),
Wins = cumsum(`W/L` == "W")) %>%
select(Team, Game, Wins) %>%
merge(logos,
by="Team")
standings <-
logs %>%
filter(Opponent != "Rhodes") %>%
group_by(Team) %>%
slice_tail(n=2+n) %>%
slice_head(n=n) %>%
mutate(Game = row_number(Team),
Wins = cumsum(`W/L` == "W")) %>%
ungroup() %>%
select(Team, Game, Wins) %>%
merge(logos,
by="Team") %>%
rbind(chicago_standings) %>%
group_by(Game) %>%
mutate(Ranking = rank(Wins, ties.method='min')) %>%
arrange(Ranking) %>%
ungroup() %>%
arrange(Game)
g_standings <-
standings %>%
ggplot(aes(x=Game, y=Ranking)) +
geom_line(aes(group=Team, color=Team),
size=1.5,
alpha=0.5) +
geom_image(data=filter(standings, Game == n),
aes(image=URL),
size=0.1,
stat='identity') +
scale_color_manual(values=c("navy", "red", "blue", "maroon", "orange", "purple", "yellow", "darkgreen")) +
labs(title="2023 Conference Standings",
subtitle=subtitle,
x="Games Played",
y="Ranking") +
theme_linedraw() +
theme(
plot.margin = margin(1, 0.5, 0.5, 0.5, "cm"),
plot.background = element_rect(fill = "grey90",
color = "black"),
legend.box.background = element_rect(size=0.75),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
plot.title = element_text(size=18,
face="bold"),
plot.subtitle = element_text(size=14),
plot.caption = element_text(size=10))
# ppp
# rebounds
# turnovers
g_standings
standings <-
logs %>%
filter(Opponent != "Rhodes") %>%
group_by(Team) %>%
slice_tail(n=2+n) %>%
slice_head(n=n) %>%
mutate(Game = row_number(Team),
Wins = cumsum(`W/L` == "W")) %>%
ungroup() %>%
select(Team, Game, Wins) %>%
merge(logos,
by="Team") %>%
rbind(chicago_standings) %>%
group_by(Game) %>%
mutate(Ranking = rank(Wins, ties.method='min')) %>%
arrange(Ranking) %>%
ungroup() %>%
arrange(Game)
gsheet2tbl("https://docs.google.com/spreadsheets/d/1dbt0HmaxPWpMboaYot60q7nlsLtc4yUAu16ZJ7HDJjo/edit#gid=0")
library(tidyverse)
library(ggplot2)
library(gt)
library(gsheet)
library(janitor)
rm(list = ls())
gsheet2tbl("https://docs.google.com/spreadsheets/d/1dbt0HmaxPWpMboaYot60q7nlsLtc4yUAu16ZJ7HDJjo/edit#gid=0")
zion <-
gsheet2tbl("https://docs.google.com/spreadsheets/d/1dbt0HmaxPWpMboaYot60q7nlsLtc4yUAu16ZJ7HDJjo/edit#gid=0") %>%
head(-4) %>%
tail(-1) %>%
mutate(Year = as.integer(substr(as.character(`...1`), nchar(`...1`)-3, nchar(`...1`))),
`Total Accepted` = as.integer(Acceptance),
Total = as.integer(`Total in class`),
Rate = 100 * `Total Accepted` / Total,
Status = case_when(((Year > 2014) & (Year != 2018) & (Year < 2022)) ~ "Active",
TRUE ~ "Inactive")) %>%
select(Year, `Total Accepted`, Total, Rate, Status)
View(zion)
View( gsheet2tbl("https://docs.google.com/spreadsheets/d/1dbt0HmaxPWpMboaYot60q7nlsLtc4yUAu16ZJ7HDJjo/edit#gid=0"))
library(tidyverse)
library(ggplot2)
library(gt)
library(gsheet)
library(janitor)
rm(list = ls())
setwd("/Users/jeremydumalig/Documents/GitHub/Chicago-Analytics")
read_csv("rhode_games.csv")
library(tidyverse)
library(ggplot2)
library(ggimage)
library(gsheet)
read_csv("rhode_games.csv") %>%
ggplot(aes(x=Opponent))
seq(1:1)
seq(1:27)
seq(1:29)
read_csv("rhode_games.csv") %>%
mutate(Game = seq(1:29))
read_csv("rhode_games.csv") %>%
mutate(Game = seq(1:29)) %>%
ggplot(aes(x=Opponent)) +
geom_point()
read_csv("rhode_games.csv") %>%
mutate(Game = seq(1:30)) %>%
ggplot(aes(x=Opponent)) +
geom_point()
read_csv("rhode_games.csv") %>%
mutate(Game = seq(1:30)) %>%
ggplot(aes(x=Game, y=`FTA%`)) +
geom_point()
read_csv("rhode_games.csv") %>%
mutate(Game = seq(1:30)) %>%
ggplot(aes(x=Game, y=`ORB%`)) +
geom_point()
read_csv("rhode_games.csv") %>%
mutate(Game = seq(1:30)) %>%
ggplot(aes(x=Game, y=`DRB%`)) +
geom_point()
rhode <-
read_csv("rhode_games.csv") %>%
mutate(Game = seq(1:30))
rhode %>%
ggplot(aes(x=Game, y=`DRB%`)) +
geom_point() +
geom_hline(yintercept=mean(rhode$))
rhode %>%
ggplot(aes(x=Game, y=`DRB%`)) +
geom_point() +
geom_hline(yintercept=mean(rhode$`DRB%`))
rhode %>%
ggplot(aes(x=Game, y=`DRB%`)) +
geom_point() +
geom_hline(yintercept=mean(rhode$`DRB%`),
linetype="dashed")
rhode %>%
ggplot(aes(x=Game, y=`REB%`)) +
geom_point() +
geom_hline(yintercept=mean(rhode$`DRB%`),
linetype="dashed")
rhode %>%
ggplot(aes(x=Game, y=`TO%`)) +
geom_point() +
geom_hline(yintercept=mean(rhode$`TO%`),
linetype="dashed")
rhode %>%
ggplot(aes(x=Game, y=`OPP TO%`)) +
geom_point() +
geom_hline(yintercept=mean(rhode$`OPP TO%`),
linetype="dashed")
rhode <-
read_csv("rhode_games.csv") %>%
mutate(Game = seq(1:30)) %>%
head(-1)
rhode <-
read_csv("rhode_games.csv") %>%
mutate(Game = seq(1:30)) %>%
head(-1)
View(rhode)
View(read_csv("rhode_games.csv") %>%
mutate(Game = seq(1:30)))
rhode <-
read_csv("rhode_games.csv") %>%
mutate(Game = seq(1:30)) %>%
head(-1)
rhode %>%
ggplot(aes(x=Game, y=`OPP TO%`)) +
geom_point() +
geom_hline(yintercept=mean(rhode$`OPP TO%`),
linetype="dashed")
rhode %>%
ggplot(aes(x=Game, y=`OPP TO%`)) +
geom_point() +
geom_hline(yintercept=mean(rhode$`PPP`),
linetype="dashed")
rhode %>%
ggplot(aes(x=Game, y=`PPP`)) +
geom_point() +
geom_hline(yintercept=mean(rhode$`PPP`),
linetype="dashed")
rhode %>%
ggplot(aes(x=Game, y=`OPP PPP`)) +
geom_point() +
geom_hline(yintercept=mean(rhode$`OPP PPP`),
linetype="dashed")
rhode %>%
ggplot(aes(x=Game, y=`OPP FTA%`)) +
geom_point() +
geom_hline(yintercept=mean(rhode$`OPP FTA%`),
linetype="dashed")
rhode %>%
ggplot(aes(x=Game, y=`OPP PPP`)) +
geom_point() +
geom_hline(yintercept=mean(rhode$`OPP PPP`),
linetype="dashed")
